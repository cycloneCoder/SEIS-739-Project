package com.triviahub.triviahub.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import java.util.List;

/**
 * Represents a Quiz entity in the application.
 * A Quiz is a collection of questions created by a user.
 */
@Entity
public class Quiz {

    /**
     * The unique identifier for the quiz.
     * It is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The title of the quiz. It cannot be null or blank.
     */
    @NotBlank(message = "Quiz title is required")
    @Column(nullable = false)
    private String title;

    /**
     * A brief description of the quiz.
     */
    private String description;

    /**
     * The user who created this quiz.
     * This establishes a many-to-one relationship: many quizzes can be created by one user.
     * The `user_id` column in the `quiz` table will be a foreign key referencing the `users` table.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", nullable = false)
    private User createdBy;

    /**
     * The list of questions that belong to this quiz.
     * This establishes a one-to-many relationship: one quiz can have many questions.
     * `mappedBy = "quiz"` indicates that the `Question` entity owns the relationship.
     * `cascade = CascadeType.ALL` means that if a quiz is deleted, all its questions will also be deleted.
     * `orphanRemoval = true` ensures that if a question is removed from this list, it's also deleted from the database.
     */
    @OneToMany(mappedBy = "quiz", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<Question> questions;

    // --- Constructors ---

    public Quiz() {}

    public Quiz(String title, String description, User createdBy) {
        this.title = title;
        this.description = description;
        this.createdBy = createdBy;
    }

    // --- Getters and Setters ---

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public User getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(User createdBy) {
        this.createdBy = createdBy;
    }

    public List<Question> getQuestions() {
        return questions;
    }

    public void setQuestions(List<Question> questions) {
        this.questions = questions;
    }
}
